server:
  http_listen_port: {{ getenv "TEMPO_HTTP_LISTEN_PORT" "3200" }}

distributor:
  receivers:
    jaeger:
      protocols:
        thrift_http:
        grpc:
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:

ingester:
  max_block_duration: 5m

compactor:
  compaction:
    compaction_window: {{ getenv "COMPACTOR_COMPACTION_WINDOW" "72h" }}
    block_retention: {{ getenv "COMPACTOR_BLOCK_RETENTION" "336h" }}

metrics_generator:

  processor:
    service_graphs:
      histogram_buckets: [0.1, 0.2, 0.5, 1, 2, 5, 10]
    span_metrics:
      dimensions:
        - http.method
        - http.target
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: {{ getenv "PROMETHEUS_WRITE_URL" "http://prometheus:9090/api/v1/write" }}
        send_exemplars: true

storage:
  trace:
    backend: s3
    wal:
      path: /var/tempo/wal
    local:
      path: /var/tempo/blocks
    s3:
      bucket: {{ getenv "S3_BUCKET" "tempo" }}
      endpoint: {{ getenv "S3_ENDPOINT" "default_endpoint" }}
      region: {{ getenv "S3_REGION" "auto" }}
      access_key: {{ getenv "S3_ACCESS_KEY" "default_access_key" }}
      secret_key: {{ getenv "S3_SECRET_KEY" "default_secret_key" }}
      insecure: {{ getenv "S3_INSECURE" "false" }}

overrides:
  defaults:
    metrics_generator:
      processors: [service-graphs, span-metrics]
